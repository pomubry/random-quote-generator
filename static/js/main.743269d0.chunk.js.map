{"version":3,"sources":["App.js","index.js"],"names":["color","randomColor","Math","floor","random","length","App","useState","author","setAuthor","content","setContent","href","setHref","quoteArr","setQuoteArr","activeColor","setActiveColor","opacity","setOpacity","transition","setTransition","useEffect","fetch","then","res","json","data","index","results","generalTransition","backgroundColor","className","style","id","onClick","e","preventDefault","setTimeout","authorStr","replace","contentStr","rel","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAMMA,EAAQ,CACZ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAIIC,EAAc,kBAAMD,EAAME,KAAKC,MAAMD,KAAKE,SAAWJ,EAAMK,UAuIlDC,EArIH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACTC,EADS,KACDC,EADC,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGQJ,mBAAS,IAHjB,mBAGTK,EAHS,KAGHC,EAHG,OAIgBN,mBAAS,IAJzB,mBAITO,EAJS,KAICC,EAJD,OAKsBR,mBAAS,IAL/B,mBAKTS,EALS,KAKIC,EALJ,OAMcV,mBAAS,GANvB,mBAMTW,EANS,KAMAC,EANA,OAOoBZ,mBAAS,eAP7B,mBAOTa,EAPS,KAOGC,EAPH,KAUhBC,qBAAU,WACRC,MAAM,yDACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAIC,EAAQ1B,KAAKC,MAAMD,KAAKE,SAAWuB,EAAKE,QAAQxB,QADtC,EAEcsB,EAAKE,QAAQD,GAAjCpB,EAFM,EAENA,OAAQE,EAFF,EAEEA,QAEhBD,EAAUD,GACVG,EAAWD,GACXK,EAAY,YAAIY,EAAKE,UACrBZ,EAAehB,GACfkB,EAAW,QAEd,IAGH,IA6BMW,EAAoB,CACxBC,gBAAiBf,EACjBI,WAAY,eAGd,OACE,sBAAKY,UAAU,MAAMC,MAAOH,EAA5B,UACE,iCACE,0DAIF,sBAAKE,UAAU,cAAcE,GAAG,YAAhC,UACE,sBAAKF,UAAU,QAAf,UAEE,qBACEE,GAAG,OACHD,MAAO,CACLjC,MAAOgB,EACPI,WAAYA,EACZF,QAAQ,GAAD,OAAKA,IALhB,UAQE,cAAC,IAAD,IACCR,KAIH,oBACEwB,GAAG,SACHD,MAAO,CACLjC,MAAOgB,EACPI,WAAYA,EACZF,QAAQ,GAAD,OAAKA,IALhB,eAQKV,QAKP,sBAAKwB,UAAU,UAAf,UACE,yBACEG,QAxEa,SAACC,GACtBA,EAAEC,iBACF,IAAIT,EAAQ1B,KAAKC,MAAMD,KAAKE,SAAWU,EAAST,QAFpB,EAGAS,EAASc,GAA7BpB,EAHoB,EAGpBA,OAAQE,EAHY,EAGZA,QAEhBD,EAAUD,GACVG,EAAWD,GACXO,EAAehB,GACfkB,EAAW,GACXE,EAAc,QAEdiB,YAAW,WACTnB,EAAW,GACXE,EAAc,mBACb,MA2DKa,GAAG,YACHD,MAAOH,EAHT,UAKE,cAAC,IAAD,IALF,8BAOA,oBACElB,KAAMA,EACNuB,QA9DU,SAACC,GAEnB,IAAIG,EAAY/B,EAAOgC,QAAQ,MAAO,OAClCC,EAAa/B,EAAQ8B,QAAQ,MAAO,OAExC3B,EAAQ,0CAAD,OACqC4B,EADrC,mBAC0DF,KAyDzDG,IAAI,sBACJR,GAAG,cACHD,MAAOH,EACPa,OAAO,SANT,UAQE,cAAC,IAAD,IARF,6BAcJ,sBAAKX,UAAU,UAAf,UACE,sDACA,oBACEpB,KAAK,6BACL+B,OAAO,SACPD,IAAI,sBAHN,UAKE,cAAC,IAAD,IALF,0BC3IRE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.743269d0.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\n// Icons\r\nimport { FaQuoteLeft, FaGithub, FaTwitter } from 'react-icons/fa';\r\nimport { BsArrowClockwise } from 'react-icons/bs';\r\n\r\nconst color = [\r\n  '#ED4C67',\r\n  '#F79F1F',\r\n  '#1289A7',\r\n  '#D980FA',\r\n  '#B53471',\r\n  '#EE5A24',\r\n  '#009432',\r\n  '#0652DD',\r\n  '#9980FA',\r\n  '#833471',\r\n  '#EA2027',\r\n  '#5758BB',\r\n];\r\n\r\n// Function to get a random color\r\nconst randomColor = () => color[Math.floor(Math.random() * color.length)];\r\n\r\nconst App = () => {\r\n  const [author, setAuthor] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [href, setHref] = useState('');\r\n  const [quoteArr, setQuoteArr] = useState([]);\r\n  const [activeColor, setActiveColor] = useState('');\r\n  const [opacity, setOpacity] = useState(0);\r\n  const [transition, setTransition] = useState('all 1s ease');\r\n\r\n  // Fetch quotes from a REST API & store it in state\r\n  useEffect(() => {\r\n    fetch('https://api.quotable.io/quotes?limit=50&maxLength=200')\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        let index = Math.floor(Math.random() * data.results.length);\r\n        const { author, content } = data.results[index];\r\n\r\n        setAuthor(author);\r\n        setContent(content);\r\n        setQuoteArr([...data.results]);\r\n        setActiveColor(randomColor);\r\n        setOpacity(1);\r\n      });\r\n  }, []);\r\n\r\n  // Get a random quote that was saved on the state.\r\n  const handleGenerate = (e) => {\r\n    e.preventDefault();\r\n    let index = Math.floor(Math.random() * quoteArr.length);\r\n    const { author, content } = quoteArr[index];\r\n\r\n    setAuthor(author);\r\n    setContent(content);\r\n    setActiveColor(randomColor);\r\n    setOpacity(0);\r\n    setTransition('none');\r\n\r\n    setTimeout(() => {\r\n      setOpacity(1);\r\n      setTransition('all .25s ease');\r\n    }, 250);\r\n  };\r\n\r\n  // Tweet Handler\r\n  const handleTweet = (e) => {\r\n    // Replace whitespace with %20\r\n    let authorStr = author.replace(/\\s/g, '%20');\r\n    let contentStr = content.replace(/\\s/g, '%20');\r\n\r\n    setHref(\r\n      `https://twitter.com/intent/tweet?text=\"${contentStr}\"%20-%20${authorStr}`\r\n    );\r\n  };\r\n\r\n  // Only for setting initial background\r\n  const generalTransition = {\r\n    backgroundColor: activeColor,\r\n    transition: 'all 1s ease',\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\" style={generalTransition}>\r\n      <header>\r\n        <h1>Random Quote Generator</h1>\r\n      </header>\r\n\r\n      {/* The entire Quote Box */}\r\n      <div className=\"content-box\" id=\"quote-box\">\r\n        <div className=\"quote\">\r\n          {/* Quote */}\r\n          <h2\r\n            id=\"text\"\r\n            style={{\r\n              color: activeColor,\r\n              transition: transition,\r\n              opacity: `${opacity}`,\r\n            }}\r\n          >\r\n            <FaQuoteLeft />\r\n            {content}\r\n          </h2>\r\n\r\n          {/* Author */}\r\n          <p\r\n            id=\"author\"\r\n            style={{\r\n              color: activeColor,\r\n              transition: transition,\r\n              opacity: `${opacity}`,\r\n            }}\r\n          >\r\n            - {author}\r\n          </p>\r\n        </div>\r\n\r\n        {/* Tweet and Random Quote Buttons */}\r\n        <div className=\"buttons\">\r\n          <button\r\n            onClick={handleGenerate}\r\n            id=\"new-quote\"\r\n            style={generalTransition}\r\n          >\r\n            <BsArrowClockwise /> Generate a Random Quote\r\n          </button>\r\n          <a\r\n            href={href}\r\n            onClick={handleTweet}\r\n            rel=\"noopener noreferrer\"\r\n            id=\"tweet-quote\"\r\n            style={generalTransition}\r\n            target=\"_blank\"\r\n          >\r\n            <FaTwitter /> Tweet this Quote\r\n          </a>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Profile Link */}\r\n      <div className=\"credits\">\r\n        <p>Designed and Coded By</p>\r\n        <a\r\n          href=\"https://github.com/pomubry\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <FaGithub />\r\n          Bryan Taduran\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}